{"version":3,"sources":["Podcasts.js","App.js","serviceWorker.js","index.js"],"names":["Podcasts","props","showPodcastNames","console","log","state","podcastsNames","map","eachName","i","key","to","setCommuteTime","e","preventDefault","setState","commuteTime","target","value","podcastNamesProp","podcastPics","podcastPicsProp","commuteSeconds","this","type","onChange","Component","App","quote","podcast","max","min","offset","allGenres","genres","allGenreIds","genreId","genrePods","genrePodIds","genrePodNames","genrePodPics","genrePodLinks","getGenreIds","genreIdsNew","eachGenre","push","id","kanyeQuote","getGenre","axios","get","headers","then","res","data","podcasts","getSearchedGenreIds","getSearchedGenreNames","getSearchedGenrePics","catch","err","error","copy","each","title","image","setGenre","showWeeklyCommuteTimeInSeconds","randomQuote","className","onSubmit","for","name","selected","exact","path","render","React","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e1e429e9.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport \"./App.css\";\nimport {Link} from \"react-router-dom\";\n\nexport default class Podcasts extends Component {\n    \n    constructor(props) {\n        super(props) \n        this.state = {\n            podcastsNames: props.podcastNamesProp,\n            podcastPics: props.podcastPicsProp,\n            commuteTime: 0,\n            commuteSeconds: 0,\n            // podcasts: props.podcastsProp\n        }\n    }\n\n\n    showPodcastNames = () => {\n        console.log(\"Showing podcasts\")\n        console.log(this.state.podcastsNames)\n        return (this.state.podcastsNames.map((eachName,i) => {\n            console.log(eachName)\n                return(\n                    <li key={i}>\n                    <Link to=\"/podcacts/:id\">{eachName}</Link>\n                    </li>\n                )\n                 } ))\n    }\n\n    // showPodcastPics = () => {\n    //     console.log(\"Showing podcasts\")\n    //     console.log(this.state.podcastPics)\n    //     return (this.state.podcastPics.map((eachPic,i) => {\n    //         console.log(eachPic)\n    //             return(\n    //                 <li key={i}>\n    //                     {eachPic}\n    //                 </li>\n    //             )\n    //              } ))\n    // }\n\n    setCommuteTime = (e) => {\n        e.preventDefault();\n  \n        this.setState({\n            commuteTime: e.target.value\n        }, () => {\n            console.log(this.state)})\n    }\n\n\n    \n    render() {\n        return (\n            <div>\n            <h3>Top Rated Podcasts</h3>\n            <ul>\n            {this.showPodcastNames()}\n            {/* {this.showPodcastPics()} */}\n            </ul>\n            <hr />\n            <form>\n            <h5>Want Commute friendly episodes?</h5>\n            <br />\n            <h5>Daily Commute Time in Minutes:</h5>\n            <input type=\"number\" value={this.commuteTime} onChange={this.setCommuteTime}/>\n            <button type=\"submit\" >Submit</button>\n            \n            </form>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport genres from \"./genres.json\";\n// import bootstrap from 'bootstrap';\nimport {Link, Route, Switch} from \"react-router-dom\";\nimport Podcasts from \"./Podcasts\"\n\n\nclass App extends React.Component {\n  \n  \n  state = {\n    quote: null,\n    podcast: \"\",\n    max:1,\n    min:0,\n    offset: 0,\n    allGenres: genres.genres,\n    allGenreIds: [],\n    genreId: 0,\n    genrePods: [],\n    genrePodIds: [],\n    genrePodNames: [],\n    genrePodPics: [],\n    genrePodLinks: []\n  }\n  componentWillMount(){ //on load \n    this.getGenreIds()\n  }\n  \n  getGenreIds = () => { //get the json file and make a new array with just name \n    let genreIdsNew = []\n    this.state.allGenres.map((eachGenre,i) => {\n      genreIdsNew.push(eachGenre.id)\n    })\n    this.setState({\n      allGenreIds: genreIdsNew\n    })\n  }\n\n\n\n  kanyeQuote = () => {\n    if (this.state.quote) {\n      return (\n        <p>Kanye quote of the day: \"{this.state.quote}\"</p>\n      )\n    } else return <div></div>\n  }\n\n  componentDidMount() {\n    axios.get(\"https://api.kanye.rest\").then(randomQuote=>{\n      console.log(randomQuote)\n      this.setState({\n          quote: randomQuote.data.quote\n    });\n  })    \n  \n  }\n\n\n  \n  getGenre = () => {\n    axios.get(`https://listen-api.listennotes.com/api/v2/best_podcasts?genre_id=${this.state.genreId}&page=1&region=us&safe_mode=0`, {headers: {\n        'X-ListenAPI-Key': 'f92e4a4b6c304ce4b3710775385e3efb'\n        }}).then(res=>{\n\n          this.setState({\n            genrePods: res.data.podcasts\n          })\n          this.getSearchedGenreIds()\n          this.getSearchedGenreNames()\n          this.getSearchedGenrePics()\n        console.log(res)\n      }).catch(err=>console.error(err))\n    }\n\n    getSearchedGenreIds = () => {\n      console.log(this.state.genrePods)\n      let copy = this.state.genrePods.map(each=>\n        each.id\n        // console.log(each.id)\n        // eachId.id\n        // this.setState({\n        //     genrePodIds2: eachId.id\n        //   }\n        // )\n      )\n      \n      this.setState({\n        genrePodIds: copy\n      })\n    }\n\n\n    getSearchedGenreNames = () => {\n      console.log(this.state.genrePods)\n      let copy = this.state.genrePods.map(each=>\n        each.title\n        // console.log(each.id)\n        // eachId.id\n        // this.setState({\n        //     genrePodIds2: eachId.id\n        //   }\n        // )\n      )\n      \n      this.setState({\n        genrePodNames: copy\n      },()=>{\n        console.log(copy)\n      })\n    }\n\n    getSearchedGenrePics = () => {\n      console.log(this.state.genrePods)\n      let copy = this.state.genrePods.map(each=>\n        each.image\n       \n        // console.log(each.id)\n        // eachId.id\n        // this.setState({\n        //     genrePodIds2: eachId.id\n        //   }\n        // )\n      )\n      \n      this.setState({\n        genrePodPics: copy\n      },()=>{\n        console.log(copy)\n      })\n    }\n\n\n\n  setGenre = (e) => {\n    e.preventDefault();\n\n    this.setState({\n        genreId: e.target.value,\n    }, () => {\n      this.getGenre()\n    }\n      )\n\n    \n}\n\n// setSearchTerms = () => {\n\n//   let searchValue = \"yo this is a search\"\n\n//   let newSearchValue = encodeURIComponent(searchValue)\n\n//   console.log(newSearchValue)\n\n// }\n\n\n\n  // getRidOfQuote = () => {\n  //   this.setState({quote:null})\n  // }\n\n\n  // updateInput = (e) =>{\n\n  //   this.setState({\n  //       [e.target.name]: e.target.value\n  //       }, ()=>{\n  //       console.log(this.state)\n  //       })            \n\n  //   }\n\n  showWeeklyCommuteTimeInSeconds = (e) => {\n    e.preventDefault();\n    \n    this.setState({\n      commuteSeconds: this.state.commuteTime*60\n    }, () => {\n      console.log(this.state)})\n  }\n\n  \n\n  render() {\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n        <Link className=\"link\" to=\"\"><h3>My Commute Pods</h3></Link>\n        {this.kanyeQuote()}\n        </header>\n        <div>\n        <form onSubmit={this.showWeeklyCommuteTimeInSeconds} >\n          \n          <div className=\"form-group\">\n          <label for=\"exampleFormControlSelect1\">Pick a Genre</label>\n          <br />\n          <select id=\"exampleFormControlSelect1\" className=\"form-control\" name=\"genre\" onChange={this.setGenre}>\n          <option value=\"139\" selected=\"true\">VR & AR</option>\n          <option value=\"140\">Web Design</option> \n          <option value=\"141\">Golf</option>  \n          <option value=\"142\">English Learning</option>\n          <option value=\"143\">Programming</option>\n          <option value=\"144\">Personal Finance</option> \n          <option value=\"145\">Parenting</option>  \n          <option value=\"146\">LGBTQ</option>  \n          <option value=\"147\">SEO</option> \n          <option value=\"148\">American History</option>  \n          <option value=\"149\">Venture Capital</option>    \n          <option value=\"138\">Movie</option>  \n          <option value=\"150\">Chinese History</option>    \n          <option value=\"151\">Locally Focused</option>  \n          <option value=\"154\">San Francisco Bay Area</option>   \n          <option value=\"155\">Denver</option>   \n          <option value=\"157\">Startup</option>  \n          <option value=\"158\">NFL</option>    \n          <option value=\"159\">Harry Potter</option> \n          <option value=\"162\">Game of Thrones</option>  \n          <option value=\"165\">Storytelling</option> \n          <option value=\"166\">YouTube</option>  \n          <option value=\"83\">Other Games</option>   \n          <option value=\"84\">Automotive</option>   \n          <option value=\"85\">Video Games</option>   \n          <option value=\"86\">Hobbies</option>    \n          <option value=\"87\">Aviation</option>  \n          <option value=\"152\">United States</option>    \n          <option value=\"156\">China</option>  \n          <option value=\"160\">Star Wars</option>    \n          <option value=\"163\">AI & Data Science</option>    \n          <option value=\"67\">Podcasts</option>  \n          <option value=\"68\">TV & Film</option>  \n          <option value=\"69\">Hinduism</option>    \n          <option value=\"70\">Christianity</option>  \n          <option value=\"71\">Other</option>    \n          <option value=\"72\">Judaism</option>  \n          <option value=\"73\">Buddhism</option>    \n          <option value=\"74\">Islam</option>    \n          <option value=\"75\">Spirituality</option>  \n          <option value=\"76\">Religion & Spirituality</option>      \n          <option value=\"77\">Sports & Recreation</option>\n          <option value=\"78\">Professional</option> \n          <option value=\"79\">Outdoor</option>  \n          <option value=\"80\">College & High School</option> \n          <option value=\"81\">Amateur</option> \n          <option value=\"82\">Games & Hobbies</option> \n          <option value=\"88\">Health</option> \n          <option value=\"89\">Fitness & Nutrition</option> \n          <option value=\"90\">Self-Help</option>  \n          <option value=\"91\">Alternative Health</option>  \n          <option value=\"92\">Sexuality</option>  \n          <option value=\"93\">Business</option>  \n          <option value=\"94\">Careers</option>  \n          <option value=\"95\">Business News</option>  \n          <option value=\"96\">Shopping</option>\n          <option value=\"97\">Management & Marketing</option>\n          <option value=\"98\">Investing</option>\n          <option value=\"99\">News & Politics</option>\n          <option value=\"100\">Arts</option>\n          <option value=\"101\">Performing Arts</option>\n          <option value=\"102\">Food</option>\n          <option value=\"103\">Visual Arts</option>\n          <option value=\"104\">Literature</option> \n          <option value=\"105\">Design</option>\n          <option value=\"106\">Fashion & Beauty</option>\n          <option value=\"107\">Science & Medicine</option>\n          <option value=\"108\">Social Sciences</option>\n          <option value=\"109\">Medicine</option>\n          <option value=\"110\">Natural Sciences</option>\n          <option value=\"111\">Education</option>\n          <option value=\"112\">Educational Technology</option>\n          <option value=\"113\">Higher Education</option>\n          <option value=\"114\">K-12</option> \n          <option value=\"115\">Training</option> \n          <option value=\"116\">Language Courses</option> \n          <option value=\"117\">Government & Organizations</option> \n          <option value=\"118\">Local</option> \n          <option value=\"136\">Crypto & Blockchain</option>\n          <option value=\"135\">True Crime</option>\n          <option value=\"119\">Non-Profit</option>\n          <option value=\"120\">Regional</option>\n          <option value=\"121\">National</option>\n          <option value=\"122\">Society & Culture</option>\n          <option value=\"123\">Places & Travel</option>\n          <option value=\"124\">Personal Journals</option>\n          <option value=\"126\">Philosophy</option>\n          <option value=\"128\">Software How-To</option>\n          <option value=\"129\">Podcasting</option>\n          <option value=\"130\">Gadgets</option>\n          <option value=\"131\">Tech News</option>\n          <option value=\"132\">TKids & Family</option>\n          <option value=\"133\">Comedy</option>\n          <option value=\"134\">Music</option>\n          <option value=\"153\">New York</option>\n          <option value=\"161\">Star Trek</option>\n          <option value=\"164\">Apple</option>\n          <option value=\"125\">History</option>\n          <option value=\"137\">NBA</option>\n          <option value=\"127\">Technology</option>\n          <option value=\"167\">Audio Drama</option>\n          <option value=\"168\">Fiction</option>\n          <option value=\"169\">Sales</option>\n          </select>\n          </div>\n          <Link to=\"/podcasts\"><button type=\"submit\">Submit</button></Link>\n        </form>\n        </div>\n\n        <Switch>\n\n      <Route exact path=\"/podcasts\" render =  {props => \n      <Podcasts\n      {...props}\n       podcastNamesProp = {this.state.genrePodNames}\n       podcastPicsProp = {this.state.genrePodPics}\n      //  podcastsProp = {this.state.genrePods}\n      \n      /> } />\n\n      <Route exact path=\"\" />\n    \n      </Switch>\n\n\n\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n<BrowserRouter>\n<App />\n</BrowserRouter>, \ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
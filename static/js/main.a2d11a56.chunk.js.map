{"version":3,"sources":["PodcastEpisodes.js","PodcastDetail.js","Podcasts.js","App.js","serviceWorker.js","index.js"],"names":["PodcastEpisodes","props","getEpisodes","searchValue","match","params","id","newSearchValue","encodeURIComponent","commuteTime","time","axios","get","headers","then","res","console","log","data","results","setState","episodeInfo","convertMinutes","catch","err","error","minutes","state","audio_length_sec","showEpisodeNames","map","eachName","i","key","className","href","audio","title_original","this","Fragment","Container","fluid","Row","Col","Component","PodcastDetail","name","podcastName","find","eachPodcast","pic","findTheIndex","findIndex","podcastPic","des","podcastDescription","link","podcastLink","podcastId","setCommuteTime","e","preventDefault","target","value","commuteSeconds","podcast","index","podcastEpisodeName","podcastEpisodeId","src","alt","type","onChange","to","onClick","sendCommute","exact","path","component","Podcasts","showPodcastNames","podcastsNames","podcastNamesProp","podcastPics","podcastPicsProp","podcastsIds","podcastIdsProps","podcastEpisodes","xs","App","quote","max","min","offset","allGenres","genres","allGenreIds","genreId","genrePods","genrePodIds","genrePodNames","genrePodPics","genrePodLinks","genrePodDescription","genreName","landing","getGenreIds","genreIdsNew","eachGenre","push","kanyeQuote","getGenre","podcasts","getSearchedGenreIds","getSearchedGenreNames","getSearchedGenrePics","getSearchedGenreDescriptions","getSearchedGenreLinks","copy","each","title","listennotes_url","description","image","setGenre","randomQuote","onSubmit","selected","podcastsProp","React","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a2d11a56.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport {Link} from \"react-router-dom\";\nimport {Container, Row, Col} from \"react-bootstrap\"\n\nexport default class PodcastEpisodes extends Component {\n    \n\n    constructor(props) {\n        super(props)\n        this.state = {\n            // commuteTime: 60,\n            episodeInfo: [],\n            minutes: []\n        }\n    }\n\n    componentDidMount() {\n        // this.setState({\n        //     commuteTime:this.props.time\n        // })\n        this.getEpisodes()\n    }\n\n    \n\n    getEpisodes = () => {\n        \n        let searchValue = this.props.match.params.id\n\n        let newSearchValue = encodeURIComponent(searchValue)\n\n        let commuteTime = this.props.time || 60\n\n        return (\n            axios.get(`https://listen-api.listennotes.com/api/v2/search?q=${newSearchValue}&sort_by_date=1&type=episode&len_max=${commuteTime}&language=English&safe_mode=0`, {headers: {\n                'X-ListenAPI-Key': 'f92e4a4b6c304ce4b3710775385e3efb'\n                }}).then(res=>{\n\n                console.log(res.data.results)\n                this.setState({\n                    episodeInfo: res.data.results\n                })\n\n                this.convertMinutes();\n\n              }).catch(err=>console.error(err))\n        )\n        \n    }\n\n    convertMinutes = () => {\n\n        this.setState({\n            minutes: [this.state.episodeInfo.audio_length_sec / 60]\n        })\n    }\n\n    showEpisodeNames = () => {\n        console.log(\"Showing episodes\")\n        console.log(this.state.episodeInfo)\n        return (this.state.episodeInfo.map((eachName,i) => {\n            console.log(eachName)\n                return(\n                    <li key={i}>\n                    <a className=\"pod-names\" href={eachName.audio}>{eachName.title_original} </a>\n                    <hr />\n                    </li>\n                )\n                 } ))\n    }\n\n   \n   \n    \n    render() {\n\n        console.log(this.props.match.params.id)\n\n        console.log(this.props);\n\n        console.log(this.state.commuteTime)\n\n        return (\n            <React.Fragment>\n            <Container fluid={true} className=\"font\">>\n            <Row>\n                <Col>\n                    <h4 className=\"pod-header\">Episodes You Can Finish During Your Daily Commute</h4>\n                </Col>\n            </Row>\n\n            <Row>\n                <Col>\n                <ul>\n                {this.showEpisodeNames()}\n                </ul>\n                </Col>\n            </Row>\n                \n            </Container>\n            </React.Fragment>\n            \n        )\n    }\n}\n","import React, { Component } from 'react';\nimport {Link,Route} from 'react-router-dom';\nimport \"./App.css\";\nimport axios from \"axios\";\nimport PodcastEpisodes from \"./PodcastEpisodes\";\nimport {Container, Row, Col} from \"react-bootstrap\";\n\n\nexport default class PodcastDetail extends Component {\n    \n    // componentDidMount(){\n    //     console.log(\"hello\")\n    //     this.setIndexState()\n    // }\n\n    constructor(props) {\n        super(props) \n        this.state = {\n            podcastName: props.podcastName,\n            podcastPic: props.podcastPic,\n            podcast: props.podcast,\n            index: 0,\n            commuteTime: 0,\n            commuteSeconds: 0,\n            podcastDescription: props.podcastDescription,\n            podcastLink: props.podcastLink,\n            podcastId: props.podcastId,\n            podcastEpisodeName: \"\",\n            podcastEpisodeId: \"\"\n        }\n    }\n\n    // setIndexState = () => {\n\n    //     this.setState({\n    //         index: this.findTheIndex\n    //     })\n    // }\n\n    name = () => this.state.podcastName.find(eachPodcast=>{\n        console.log(eachPodcast)\n        return this.props.match.params.id === eachPodcast\n    })\n    \n\n\n\n   pic = () => {\n    let findTheIndex = this.state.podcastName.findIndex(name => name === this.props.match.params.id)\n    console.log(findTheIndex)\n    return this.state.podcastPic[findTheIndex] \n   }\n\n   des = () => {\n    let findTheIndex = this.state.podcastName.findIndex(name => name === this.props.match.params.id)\n    console.log(findTheIndex)\n    return this.state.podcastDescription[findTheIndex] \n   }\n\n   link = () => {\n    let findTheIndex = this.state.podcastName.findIndex(name => name === this.props.match.params.id)\n    console.log(findTheIndex)\n    return this.state.podcastLink[findTheIndex] \n   }\n\n   id = () => {\n    let findTheIndex = this.state.podcastName.findIndex(name => name === this.props.match.params.id)\n    console.log(findTheIndex)\n    return this.state.podcastId[findTheIndex] \n   }\n\n   setCommuteTime = (e) => {\n    e.preventDefault();\n    this.setState({\n        commuteTime: e.target.value,\n        commuteSeconds: this.state.commuteTime*60\n    }, () => {\n        console.log(this.state)}\n        )\n\n    let passProps = () => {\n            return (\n            <PodcastEpisodes commuteTime={this.state.commuteTime} />\n            )\n        }\n\n    return passProps()\n    \n}\n\n    \n    render() {\n\n            console.log(this.props.match.params.id) //USA\n            console.log(this.props)\n\n            \n        \n        //   console.log(this.findTheIndex)\n\n\n        return (\n            <React.Fragment>\n\n            <Container fluid={true} className=\"font\">\n            <Row>\n            <Col className=\"pic-detail\"> \n                <img src={this.pic()} alt=\"\"/>\n            </Col>\n            </Row>\n            <Row>\n            <Col>\n            <h3><a className=\"pod-header\" href={this.link()}>{this.name()}</a></h3>\n            </Col>\n            </Row>\n            <Row>\n            <Col className=\"description\">\n            {this.des()}\n            <hr />\n            </Col>\n            </Row>\n            <Row>\n            <Col className=\"commute-form\">\n            <form>\n                <h5>Want Commute friendly episodes?</h5>\n                <h6>Daily Commute Time (in Minutes):</h6>\n                <input type=\"number\" value={this.props.time} onChange={this.setCommuteTime} />\n                <Link className=\"sub-button\" to={`/podcasts/episodes/${this.name()}`}><button onClick={()=>this.props.sendCommute(this.state.commuteTime)} type=\"submit\">Submit</button></Link>\n                </form>\n            </Col>\n            </Row>\n                \n\n                <Route exact path='/podcasts/episodes/:id'\n          component={(props) => <PodcastEpisodes {...props} commuteTime={this.state.commuteTime} />\n      } />\n\n            </Container>\n            </React.Fragment>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport \"./App.css\";\nimport {Link, Route} from \"react-router-dom\";\nimport axios from \"axios\";\nimport PodcastDetail from './PodcastDetail';\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nexport default class Podcasts extends Component {\n\n    // componentWillMount(){\n    //     this.getEpisodes()\n    // }\n    \n    constructor(props) {\n        super(props) \n        this.state = {\n            podcastsNames: props.podcastNamesProp,\n            podcastPics: props.podcastPicsProp,\n            commuteTime: 0,\n            commuteSeconds: 0,\n            podcastsIds: props.podcastIdsProps,\n            podcastEpisodes: []\n            // podcasts: props.podcastsProp\n        }\n    }\n\n\n    showPodcastNames = () => {\n        console.log(\"Showing podcasts\")\n        console.log(this.state.podcastsNames)\n        return (this.state.podcastsNames.map((eachName,i) => {\n            console.log(eachName)\n                return(\n                    <li key={i}>\n                    <Link className=\"pod-names\" to={`/podcasts/${eachName}`}>{eachName}</Link>\n                    <hr />\n                    </li>\n                )\n                 } ))\n    }\n\n\n    \n    render() {\n        console.log(this.state.podcastsNames)\n        console.log(this.props)\n        return (\n            <React.Fragment>\n            <Container className=\"font\" fluid={true}>\n            <Row className=\"pod-row\">\n            <Col></Col>\n            <Col xs={6} >\n            <h3 className=\"pod-header\">Top Rated Podcasts</h3>\n            </Col>\n            <Col></Col> \n            </Row>\n            <Row>\n            <Col >\n            <ul>\n            {this.showPodcastNames()}\n            </ul>\n            </Col>\n            </Row>\n\n            <Route exact path=\"/podcasts/:id\" \n          component={(props) => <PodcastDetail {...props} podcastName={this.state.podcastsNames} />\n      } />\n\n            </Container>\n            </React.Fragment>\n        )\n    }\n}\n","import React from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport genres from \"./genres.json\";\nimport {Link, Route, Switch} from \"react-router-dom\";\nimport Podcasts from \"./Podcasts\";\nimport PodcastDetail from \"./PodcastDetail\";\nimport PodcastEpisodes from \"./PodcastEpisodes\";\n// import \"./images\"\nimport { Container, Row, Col } from \"react-bootstrap\";\n\n\n\nclass App extends React.Component {\n  \n  \n  state = {\n    quote: null,\n    podcast: \"\",\n    max:1,\n    min:0,\n    offset: 0,\n    allGenres: genres.genres,\n    allGenreIds: [],\n    genreId: 0,\n    genrePods: [],\n    genrePodIds: [],\n    genrePodNames: [],\n    genrePodPics: [],\n    genrePodLinks: [],\n    genrePodDescription: [],\n    genreName: \"\",\n    landing:true,\n    time: 60\n  }\n  componentWillMount(){ //on load \n    this.getGenreIds()\n  }\n  \n  getGenreIds = () => { //get the json file and make a new array with just name \n    let genreIdsNew = []\n    this.state.allGenres.map(eachGenre => {\n      return genreIdsNew.push(eachGenre.id)\n    })\n    this.setState({\n      allGenreIds: genreIdsNew\n    })\n  }\n\n  sendCommute = (time) => {\n    console.log(time)\n    this.setState({\n      time\n    })\n  }\n\n\n  kanyeQuote = () => {\n\n  //   axios.post(\"https://ironrest.herokuapp.com/kanyequotes\", \"quote\").then(res=>{\n  //   console.log(res.data)\n  // })\n\n    if (this.state.quote) {\n      return (\n        <p>Kanye quote of the day: \"{this.state.quote}\"</p>\n      )\n    } else return <div></div>\n  }\n\n  componentDidMount() {\n    axios.get(\"https://api.kanye.rest\").then(randomQuote=>{\n      console.log(randomQuote)\n      this.setState({\n          quote: randomQuote.data.quote\n    });\n  })\n  \n  }\n\n  \n\n\n  \n  getGenre = () => {\n    axios.get(`https://listen-api.listennotes.com/api/v2/best_podcasts?genre_id=${this.state.genreId}&page=1&region=us&safe_mode=0`, {headers: {\n        'X-ListenAPI-Key': 'f92e4a4b6c304ce4b3710775385e3efb'\n        }}).then(res=>{\n\n          this.setState({\n            genrePods: res.data.podcasts\n          })\n          this.getSearchedGenreIds()\n          this.getSearchedGenreNames()\n          this.getSearchedGenrePics()\n          this.getSearchedGenreDescriptions()\n          this.getSearchedGenreLinks()\n        console.log(res)\n      }).catch(err=>console.error(err))\n    }\n\n    getSearchedGenreIds = () => {\n      console.log(this.state.genrePods)\n      let copy = this.state.genrePods.map(each=>\n        each.id\n      )\n      \n      this.setState({\n        genrePodIds: copy\n      })\n    }\n\n    getSearchedGenreNames = () => {\n      console.log(this.state.genrePods)\n      let copy = this.state.genrePods.map(each=>\n        each.title\n      )\n      \n      this.setState({\n        genrePodNames: copy\n      },()=>{\n        console.log(copy)\n      })\n    }\n\n     \n    getSearchedGenreLinks = () => {\n      console.log(this.state.genrePods)\n      let copy = this.state.genrePods.map(each=>\n        each.listennotes_url\n        // console.log(each.id)\n        // eachId.id\n        // this.setState({\n        //     genrePodIds2: eachId.id\n        //   }\n        // )\n      )\n      \n      this.setState({\n        genrePodLinks: copy\n      },()=>{\n        console.log(copy)\n      })\n    }\n    \n\n    getSearchedGenreDescriptions = () => {\n      console.log(this.state.genrePods)\n      let copy = this.state.genrePods.map(each=>\n        each.description\n        // console.log(each.id)\n        // eachId.id\n        // this.setState({\n        //     genrePodIds2: eachId.id\n        //   }\n        // )\n      )\n      \n      this.setState({\n        genrePodDescription: copy\n      },()=>{\n        console.log(copy)\n      })\n    }\n\n\n    getSearchedGenrePics = () => {\n      console.log(this.state.genrePods)\n      let copy = this.state.genrePods.map(each=>\n        each.image\n       \n        // console.log(each.id)\n        // eachId.id\n        // this.setState({\n        //     genrePodIds2: eachId.id\n        //   }\n        // )\n      )\n      \n      this.setState({\n        genrePodPics: copy\n      },()=>{\n        console.log(copy)\n      })\n    }\n\n\n\n  setGenre = (e) => {\n    e.preventDefault();\n\n    this.setState({\n        genreId: e.target.value,\n    }, () => {\n      this.getGenre()\n    }\n      )\n\n    \n}\n\n// setSearchTerms = () => {\n\n//   let searchValue = \"yo this is a search\"\n\n//   let newSearchValue = encodeURIComponent(searchValue)\n\n//   console.log(newSearchValue)\n\n// }\n\n\n\n  // getRidOfQuote = () => {\n  //   this.setState({quote:null})\n  // }\n\n\n  // updateInput = (e) =>{\n\n  //   this.setState({\n  //       [e.target.name]: e.target.value\n  //       }, ()=>{\n  //       console.log(this.state)\n  //       })            \n\n  //   }\n\n  // showWeeklyCommuteTimeInSeconds = (e) => {\n  //   e.preventDefault();\n    \n  //   this.setState({\n  //     commuteSeconds: this.state.commuteTime*60\n  //   }, () => {\n  //     console.log(this.state)})\n  // }\n\n  \n\n  render() {\n\n    return (\n<React.Fragment>\n{/* <div className={\"btn-group pull-right \" + (this.props.showBulkActions ? 'show' : 'hidden')}> */}\n\n      <Container fluid={true} className={\"App-header \" + (this.state.landing ? 'new-height' : '')}>\n          <Row>\n            <Col>\n              <Link to=\"/\" ><img className=\"logo\" src=\"./images/logo.png\" alt=\"My Commute Pods\"/></Link>\n            </Col>\n            <Col xs={6}>\n              <form onSubmit=\"/podcasts\" >\n                <div >\n                <label className=\"pick-genre\"><h4>Pick a Genre</h4></label>\n                <select className=\"select-form\" name=\"genre\" onChange={this.setGenre}>\n                <option value=\"139\" selected={true}>VR & AR</option>\n                <option value=\"140\">Web Design</option> \n                <option value=\"141\">Golf</option>  \n                <option value=\"142\">English Learning</option>\n                <option value=\"143\">Programming</option>\n                <option value=\"144\">Personal Finance</option> \n                <option value=\"145\">Parenting</option>  \n                <option value=\"146\">LGBTQ</option>  \n                <option value=\"147\">SEO</option> \n                <option value=\"148\">American History</option>  \n                <option value=\"149\">Venture Capital</option>    \n                <option value=\"138\">Movie</option>  \n                <option value=\"150\">Chinese History</option>    \n                <option value=\"151\">Locally Focused</option>  \n                <option value=\"154\">San Francisco Bay Area</option>   \n                <option value=\"155\">Denver</option>   \n                <option value=\"157\">Startup</option>  \n                <option value=\"158\">NFL</option>    \n                <option value=\"159\">Harry Potter</option> \n                <option value=\"162\">Game of Thrones</option>  \n                <option value=\"165\">Storytelling</option> \n                <option value=\"166\">YouTube</option>  \n                <option value=\"83\">Other Games</option>   \n                <option value=\"84\">Automotive</option>   \n                <option value=\"85\">Video Games</option>   \n                <option value=\"86\">Hobbies</option>    \n                <option value=\"87\">Aviation</option>  \n                <option value=\"152\">United States</option>    \n                <option value=\"156\">China</option>  \n                <option value=\"160\">Star Wars</option>    \n                <option value=\"163\">AI & Data Science</option>    \n                <option value=\"67\">Podcasts</option>  \n                <option value=\"68\">TV & Film</option>  \n                <option value=\"69\">Hinduism</option>    \n                <option value=\"70\">Christianity</option>  \n                <option value=\"71\">Other</option>    \n                <option value=\"72\">Judaism</option>  \n                <option value=\"73\">Buddhism</option>    \n                <option value=\"74\">Islam</option>    \n                <option value=\"75\">Spirituality</option>  \n                <option value=\"76\">Religion & Spirituality</option>      \n                <option value=\"77\">Sports & Recreation</option>\n                <option value=\"78\">Professional</option> \n                <option value=\"79\">Outdoor</option>  \n                <option value=\"80\">College & High School</option> \n                <option value=\"81\">Amateur</option> \n                <option value=\"82\">Games & Hobbies</option> \n                <option value=\"88\">Health</option> \n                <option value=\"89\">Fitness & Nutrition</option> \n                <option value=\"90\">Self-Help</option>  \n                <option value=\"91\">Alternative Health</option>  \n                <option value=\"92\">Sexuality</option>  \n                <option value=\"93\">Business</option>  \n                <option value=\"94\">Careers</option>  \n                <option value=\"95\">Business News</option>  \n                <option value=\"96\">Shopping</option>\n                <option value=\"97\">Management & Marketing</option>\n                <option value=\"98\">Investing</option>\n                <option value=\"99\">News & Politics</option>\n                <option value=\"100\">Arts</option>\n                <option value=\"101\">Performing Arts</option>\n                <option value=\"102\">Food</option>\n                <option value=\"103\">Visual Arts</option>\n                <option value=\"104\">Literature</option> \n                <option value=\"105\">Design</option>\n                <option value=\"106\">Fashion & Beauty</option>\n                <option value=\"107\">Science & Medicine</option>\n                <option value=\"108\">Social Sciences</option>\n                <option value=\"109\">Medicine</option>\n                <option value=\"110\">Natural Sciences</option>\n                <option value=\"111\">Education</option>\n                <option value=\"112\">Educational Technology</option>\n                <option value=\"113\">Higher Education</option>\n                <option value=\"114\">K-12</option> \n                <option value=\"115\">Training</option> \n                <option value=\"116\">Language Courses</option> \n                <option value=\"117\">Government & Organizations</option> \n                <option value=\"118\">Local</option> \n                <option value=\"136\">Crypto & Blockchain</option>\n                <option value=\"135\">True Crime</option>\n                <option value=\"119\">Non-Profit</option>\n                <option value=\"120\">Regional</option>\n                <option value=\"121\">National</option>\n                <option value=\"122\">Society & Culture</option>\n                <option value=\"123\">Places & Travel</option>\n                <option value=\"124\">Personal Journals</option>\n                <option value=\"126\">Philosophy</option>\n                <option value=\"128\">Software How-To</option>\n                <option value=\"129\">Podcasting</option>\n                <option value=\"130\">Gadgets</option>\n                <option value=\"131\">Tech News</option>\n                <option value=\"132\">TKids & Family</option>\n                <option value=\"133\">Comedy</option>\n                <option value=\"134\">Music</option>\n                <option value=\"153\">New York</option>\n                <option value=\"161\">Star Trek</option>\n                <option value=\"164\">Apple</option>\n                <option value=\"125\">History</option>\n                <option value=\"137\">NBA</option>\n                <option value=\"127\">Technology</option>\n                <option value=\"167\">Audio Drama</option>\n                <option value=\"168\">Fiction</option>\n                <option value=\"169\">Sales</option>\n                </select>\n              </div>  \n              <Link to=\"/podcasts\" className= \"button-align\" ><button className=\"button-color\" onClick={() => this.setState({landing:false})} type=\"submit\">Search</button></Link>\n              </form>\n            </Col>\n            <Col className=\"kanye\">\n              {this.kanyeQuote()}\n            </Col>\n\n\n          </Row>\n        </Container>\n        \n        <div>\n        <Switch>\n\n      <Route exact path=\"/podcasts\" component=  {props => \n      <Podcasts\n      {...props}\n       podcastNamesProp = {this.state.genrePodNames}\n       podcastPicsProp = {this.state.genrePodPics}\n       podcastsProp = {this.state.genrePods}\n      /> } />\n\n      <Route exact path=\"/podcasts/episodes/:id\" component={(props) => <PodcastEpisodes {...props} time={this.state.time} />}/>\n\n      <Route exact path=\"/podcasts/:id\" \n          component={(props) => <PodcastDetail {...props} sendCommute={this.sendCommute} podcastId = {this.state.genrePodIds} podcastLink= {this.state.genrePodLinks} podcastName={this.state.genrePodNames} podcastPic={this.state.genrePodPics} podcastDescription={this.state.genrePodDescription} />\n      } />\n\n      <Route exact path=\"/\" />\n\n\n      </Switch>\n        </div>\n        \n\n      </React.Fragment>\n\n    );\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\nReactDOM.render(\n<BrowserRouter>\n<App />\n</BrowserRouter>, \ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}